@model Libreria.Models.OrderDetail

@{
    ViewData["Title"] = "Create Order Detail";
}

<div class="container mt-5">
    <h1 class="text-center mb-4">Crear Venta</h1>

    <form asp-action="Create" class="needs-validation" novalidate>
        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

        <div class="mb-3">
            <label asp-for="CustomerId" class="form-label"></label>
            <select asp-for="CustomerId" class="form-select" asp-items="ViewBag.CustomerId" id="CustomerId"></select>
        </div>

        <div class="mb-3">
            <label asp-for="BookId" class="form-label"></label>
            <select asp-for="BookId" class="form-select" asp-items="ViewBag.BookId" id="BookId"></select>
        </div>

        <div class="mb-3">
            <label asp-for="Quantity" class="form-label"></label>
            <input asp-for="Quantity" class="form-control" id="Quantity" />
            <span asp-validation-for="Quantity" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Subtotal" class="form-label"></label>
            <input asp-for="Subtotal" class="form-control" id="Subtotal" readonly />
            <span asp-validation-for="Subtotal" class="text-danger"></span>
        </div>

        <div class="text-end">
            <button type="submit" class="btn btn-primary">Crear</button>
            <a asp-action="Index" class="btn btn-secondary">Volver</a>
        </div>
    </form>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        $(document).ready(function() {
            function updateSubtotal() {
                var quantity = parseFloat($("#Quantity").val()) || 0;
                var bookId = $("#BookId").val();
                $.ajax({
                    url: '@Url.Action("GetBookPrice", "OrderDetails")',
                    type: 'GET',
                    data: { bookId: bookId },
                    success: function(response) {
                        var unitPrice = response.price || 0;
                        var discountPercentage = parseFloat($("#CustomerId").find("option:selected").data("discount")) || 0;
                        var subtotal = quantity * unitPrice * (1 - discountPercentage / 100);
                        $("#Subtotal").val(subtotal.toFixed(2));
                    }
                });
            }

            $("#BookId, #Quantity, #CustomerId").on("change input", updateSubtotal);
        });
    </script>
}
